## Test for FileHeader Flags; when FLAGS variable isn't defined, the e_flags value is 0, otherwise it's the specified value

# RUN: yaml2obj %s -o %t
# RUN: llvm-readobj -h %t | FileCheck %s --check-prefixes=CHECK,NO-FLAG

# RUN: yaml2obj %s -o %t -DFLAGS=[EF_AMDGPU_MACH_AMDGCN_GFX900]
# RUN: llvm-readobj -h %t | FileCheck %s --check-prefixes=CHECK,FLAG

!ELF
FileHeader:
  Class:           ELFCLASS64
  Data:            ELFDATA2LSB
  OSABI:           ELFOSABI_AMDGPU_HSA
  Type:            ET_EXEC
  Machine:         EM_AMDGPU
  Flags:           [[FLAGS=<none>]]

# CHECK:              Format: elf64-amdgpu
# CHECK-NEXT:         Arch: {{(unknown|amdgcn)}}
# CHECK-NEXT:         AddressSize: 64bit
# CHECK-NEXT:         LoadName: <Not found>
# CHECK-NEXT:         ElfHeader {
# CHECK-NEXT:           Ident {
# CHECK-NEXT:             Magic: (7F 45 4C 46)
# CHECK-NEXT:             Class: 64-bit (0x2)
# CHECK-NEXT:             DataEncoding: LittleEndian (0x1)
# CHECK-NEXT:             FileVersion: 1
# CHECK-NEXT:             OS/ABI: AMDGPU_HSA (0x40)
# CHECK-NEXT:             ABIVersion: 0
# CHECK-NEXT:             Unused: (00 00 00 00 00 00 00)
# CHECK-NEXT:           }
# CHECK-NEXT:           Type: Executable (0x2)
# CHECK-NEXT:           Machine: EM_AMDGPU (0xE0)
# CHECK-NEXT:           Version: 1
# CHECK-NEXT:           Entry: 0x0
# CHECK-NEXT:           ProgramHeaderOffset: 0x0
# CHECK-NEXT:           SectionHeaderOffset: 0x58
# NO-FLAG-NEXT:         Flags [ (0x0)
# FLAG-NEXT:            Flags [ (0x2C)
# FLAG-NEXT:              EF_AMDGPU_MACH_AMDGCN_GFX900 (0x2C)
# CHECK-NEXT:             ]
# CHECK-NEXT:           HeaderSize: 64
# CHECK-NEXT:           ProgramHeaderEntrySize: 0
# CHECK-NEXT:           ProgramHeaderCount: 0
# CHECK-NEXT:           SectionHeaderEntrySize: 64
# CHECK-NEXT:           SectionHeaderCount: 3
# CHECK-NEXT:           StringTableSectionIndex: 2
# CHECK-NEXT:         }
